datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Notebook {
  id         String      @id @map("_id")
  title      String
  text       Text[]
  flashcards Flashcard[]
  archived   Boolean
  pinned     Boolean
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  user       User        @relation(fields: [userId], references: [id])
  userId     String
}

model Text {
  id         String   @id @map("_id")
  original   String
  omitted    String
  keywords   String[]
  notebookid String
  Notebook   Notebook @relation(fields: [notebookid], references: [id])
}

model Flashcard {
  id          String   @id @map("_id")
  question    String
  answer      String
  indexNumber Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  User        User     @relation(fields: [userId], references: [id])
  notebookid  String
  Notebook    Notebook @relation(fields: [notebookid], references: [id])
}

model User {
  id             String      @id @map("_id")
  email          String      @unique
  emailVerified  Boolean     @default(false)
  name           String
  hashedPassword String?
  usedTokens     Int
  notebooks      Notebook[]
  flashcards     Flashcard[]
  sessions       Session[]
}

model Session {
  id        String   @id @map("_id")
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model VerificationCode {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  code      String
  userId    String   @unique
  email     String
  expiresAt DateTime
}

model OAuthAccount {
  providerId     String
  providerUserId String @id @map("_id")
  userId         String
}

model PasswordResetToken {
  tokenHash String   @id @map("_id")
  userId    String
  expiresAt DateTime
}
